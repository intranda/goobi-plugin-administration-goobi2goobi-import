<config_plugin>
	<config>
		<rulename>19_century</rulename>
		<step name="Download from internet archive with ITM" type="change">
		<!-- change the itm url-->
			<scriptStep scriptStep="true" scriptName1="Download data" scriptPath1="/usr/bin/java -jar /opt/digiverso/itm/bin/TaskClient.jar -itm http://itm.workflow/itm/service -s ${meta.CatalogIDDigital} -d {imagepath}/source/ -n template -e -i {stepid} -T {processtitle} -t IADOWNLOAD -gid {processid} -p 2" />
		</step>

		<!-- delete hash creation task -->
		<step name="Automatic: Create hashes for sourcepath" type="delete">
		</step>

		<step name="Import data from internet archive" type="change">
		<!-- change the itm url-->
			<scriptStep scriptStep="true" scriptName1="iaparser" scriptPath1="/usr/bin/java -jar /opt/digiverso/itm/bin/TaskClient.jar -itm http://itm.workflow/itm/service -e -gid {processid} -i {stepid} -s ${meta.CatalogIDDigital} -d ${s3_origpath} -T {processtitle} -t IAPARSER -n iaparser" />
		</step>

		<!-- delete hash creation -->
		<step name="Automatic: Create hashes for master images" type="delete">
		</step>

		<!-- delete derivate creation -->
		<step name="Create derivates" type="delete">
		</step>


		<step name="Alto conversion" type="change">
		<!-- change the itm url-->
			<scriptStep scriptStep="true" scriptName1="Alto conversion" scriptPath1="/usr/bin/java -jar /opt/digiverso/itm/bin/TaskClient.jar -itm http://itm.workflow/itm/service -s {origpath} -d {processpath} -e -gid {processid} -i {stepid} -T {processtitle} -t ALTOCONVERT -n altoconvert" />
		</step>

		<!-- delete hash creation -->
		<step name="Automatic: Create hashes for OCR directory" type="delete">
		</step>

		<!-- delete hash verification -->
		<step name="Automatic: Verify hashes for derivatives" type="delete">
		</step>

		<!-- delete sdb ingest -->
		<step name="SDB ingest" type="delete">
		</step>

		<!-- delete export to DDS -->
		<step name="export to DDS" type="delete">
		</step>

		<!-- rename export task -->
		<step name="Export with PREMIS data" type="change">
			<newStepName>Automatic: Export</newStepName>
		</step>
		
		<!-- change url in bagit step-->
		<step name="bagit creation and upload" type="change">
		<!-- change the itm url in http step -->
			<httpStep httpStep="true" httpUrl="http://itm.workflow/itm/service" />
		</step>
        
		<!-- delete jpeg deletion -->
		<step name="jpeg deletion" type="delete">
		</step>


		<docket name ="Default docket">
			<newDocketName>docket</newDocketName>
			<newFileName>docket.xsl</newFileName>
		</docket>
	</config> 


	<config>
		<rulename>Example project</rulename>	
        <rulename>Another project</rulename>    
		<!-- add a new configuration block for each step, that needs to be changed -->
		<!-- @name: name of the step on winnipeg -->
		<!-- @type: type of the manipulation, possible values are change, delete, insertBefore, insertAfter -->
		<step name="Some example step to include all values" type="change">
			
			<!-- optional values to change. If the fields are missing, the values are not changed. If the field is empty. the value is cleaned (only on strings), otherwise the old value is overwritten -->
			<newStepName>New step name</newStepName>
			<priority>5</priority>
			<order>3</order>
			<useHomeDirectory>0</useHomeDirectory>
			<stepStatus>0</stepStatus>
			<!-- checkboxes to set the step types -->
			<types metadata="true" automatic="false" readImages="false" writeImages="false" export="false" validateOnExit="true" finalizeOnAccept="false" delayStep="false" updateMetadataIndex="false" generateDocket="false" batchStep="false" stepPlugin="" validationPlugin=""/>

			 <scriptStep scriptStep="true" scriptName1="Download" scriptPath1="/usr/bin/java -jar ...." scriptName2="" scriptPath2="" scriptName3="" scriptPath3="" scriptName4="" scriptPath4="" scriptName5="" scriptPath5="" />

			 <httpStep httpStep="true" httpMethod="POST" httpUrl="http://localhost:8080/itm/service" httpJsonBody="{ .... } " httpCloseStep="false" />
		</step>
        
        <!-- example for docket configuration. @name is the old docket name in the db file. Can be empty to match any docket -->
        <docket name ="Default docket">
            <newDocketName>docket</newDocketName>
            <newFileName>docket.xsl</newFileName>
        </docket>
        
        <!--  use new project instead of old one. @name can be left to match any project name, otherwise only projects with this name will be changed -->
        <project name ="19_century">
            <newProjectName>IA-Downloads</newProjectName>
        </project>
        
        <property name="CollectionName1">
            <oldPropertyValue>Digitised</oldPropertyValue>
            <newPropertyName>CollectionName</newPropertyName>
            <newPropertyValue>default_collection</newPropertyValue>
        </property>  
        
        <ruleset name ="Default">
            <newRulesetName>default ruleset</newRulesetName>
            <newFileName>ruleset.xml</newFileName>
        </ruleset>  
        
        <!-- @name: internal metadata name -->
        <!-- @type can be 'change', 'delete', 'add'-->
        <metadata name="CatalogIDDigital" type="change">
            <!-- if filled, value is checked against this regular expression -->
            <valueContitionRegex>/b\d+(?:_\d+)?/</valueContitionRegex> <!-- check if it starts with be, followed by numbers and optional underscore + numbers -->
            <!-- manipulate existing value with this regular expresseion -->
            <valueReplacementRegex>s/^(.+)$/IMPORT_$1/g</valueReplacementRegex> <!-- take the complete value and add the prefix 'IMPORT_' to it -->
            <!--  possible values are all, anchor, top, physical -->
            <position>all</position>
        </metadata>
        <metadata name="EmbeddedView" type="delete">
            <position>top</position>
        </metadata>

        <metadata name="Testmetatda" type="add">
            <valueReplacementRegex>Tschaka</valueReplacementRegex>
            <position>top</position>
        </metadata>        
            
	</config>
</config_plugin>
